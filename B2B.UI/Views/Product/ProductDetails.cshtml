@model ResultProductPriceDto
@{
    ViewData["Title"] = "ProductDetails";
    Layout = "~/Views/Layout/LayoutIndex.cshtml";
   var productId = Model.ProductID;
    var sliderCount = 0;
    if (Model.Product.ProductImage1 != null)
    {
        sliderCount++;
    }
    if (Model.Product.ProductImage2 != null)
    {
        sliderCount++;
    }
    if (Model.Product.ProductImage3 != null)
    {
        sliderCount++;
    }
    var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}

<style>
    /*********************************************/
    /*COLORS*/
    /*********************************************/


    .navbar__custom {
        display: none !important;
    }

    .footer {
        display: none !important;
    }

    .navbar__custom {
        box-shadow: 0 0 100px rgba(0, 0, 0, 0.1);
        border-bottom: 2px solid #cfcfcf;
        min-width: 100%;
    }

    .header__menu ul li a {
        color: black;
    }

    .btn-light {
        border-color: #a9a9a9 !important;
    }


    img {
        max-width: 100%;
        height: auto;
    }

    ul {
        margin: 0;
        padding: 0;
        list-style-type: none !important;
    }

    a {
        text-decoration: none;
        color: black;
    }

        a:hover, a:focus, a:active {
            text-decoration: none;
            color: black;
        }

    input,
    input:focus,
    input:active {
        outline: none;
    }

    button,
    button:active,
    button:focus,
    button:hover {
        outline: none;
    }

    button {
        padding: 0;
        margin: 0;
        background-color: transparent;
        color: #000;
    }

    .mainWrapper {
        position: relative;
        width: 100%;
        min-width: 320px;
       
        padding: 0;
        margin: 0 !important;
      
    }

</style>

<main class="main">
    <a id="iframeClose"  class="btn-sm btn-danger btn-close" disabled aria-label="Close" style="z-index: 9999;
    right: 20px;
    top: 10px;
background-color: red;
    position: fixed;"></a>
    <div class="mainWrapper">
        <div class="mainBackground clearfix">
            <div class="row " style="background-color: #FAF1E4;">
                <div class="column small-centered">
                    <div class="productCard_block">
                        <div class="row">
                            <div class="d-flex justify-content-center">
                                <button class="btn btn-outline-danger">
                                    <i class="fa fa-bell-o"></i>
                                    Stoğa Eklendiğinde bildirim gönder
                                </button>
                            </div>

                            <div class="small-12 large-6 columns" style=" max-width: 40%;">
                                <div class="productCard_leftSide clearfix">

                                    <div class="sliderBlock">
                                        <ul class="sliderBlock_items">
                                            <li class="sliderBlock_items__itemPhoto sliderBlock_items__showing" style="width: 100%;">
                                                <img src="@Model.Product.ProductImage" alt="">
                                            </li>
                                            @if (Model.Product.ProductImage1 != null)
                                            {
                                                <li class="sliderBlock_items__itemPhoto sliderBlock_items__showing" style="width: 100%;">
                                                    <img src="@Model.Product.ProductImage1" alt="">
                                                </li>
                                            }
                                            @if (Model.Product.ProductImage2 != null)
                                            {
                                                <li class="sliderBlock_items__itemPhoto sliderBlock_items__showing" style="width: 100%;">
                                                    <img src="@Model.Product.ProductImage2" alt="">
                                                </li>
                                            }
                                            @if (Model.Product.ProductImage3 != null)
                                            {
                                                <li class="sliderBlock_items__itemPhoto sliderBlock_items__showing" style="width: 100%;">
                                                    <img src="@Model.Product.ProductImage3" alt="">
                                                </li>
                                            }




                                        </ul>

                                        <div class="sliderBlock_controls">
                                            <div class="sliderBlock_controls__navigatin">
                                                <div class="sliderBlock_controls__wrapper">
                                                    <div class="sliderBlock_controls__arrow sliderBlock_controls__arrowBackward">
                                                        <i class="fa fa-angle-left" aria-hidden="true"></i>
                                                    </div>
                                                    <div class="sliderBlock_controls__arrow sliderBlock_controls__arrowForward">
                                                        <i class="fa fa-angle-right" aria-hidden="true"></i>
                                                    </div>
                                                </div>
                                            </div>

                                            <ul class="sliderBlock_positionControls">

                                                <li class="sliderBlock_positionControls__paginatorItem sliderBlock_positionControls__active"></li>
                                                @for (int i = 0; i < sliderCount; i++)
                                                {
                                                    <li class="sliderBlock_positionControls__paginatorItem"></li>
                                                }



                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="small-12 large-6 columns col-md-6">

                                <div class="productCard_rightSide">
                                    <div class="block_specification">



                                        <div class="block_specification">
                                            <div class="block_specification__specificationShow">
                                                <i class="fa fa-info-circle block_specification__button block_specification__button__jump"
                                                   aria-hidden="true"></i>
                                                <span class="block_specification__text">Daha Fazla Detay</span>
                                            </div>
                                            <div class="block_specification__content   " style="display: none;">
                                                <span style="overflow-wrap: anywhere;color:black ">
                                                    @Model.Product.ProductUseGuide
                                                </span>
                                            </div>
                                        </div>

                                        @*   <div class="block_specification__informationShow hide">
                                        <i class="fa fa-info-circle block_specification__button block_specification__button__jump"
                                        aria-hidden="true"></i>
                                        <span class="block_specification__text">Daha Fazla Detay</span>
                                        </div> *@

                                    </div>

                                    <p class="block_model">
                                        <span class="block_model__text">Model: </span>
                                        <span class="block_model__number">@Model.Product.ProductID</span>
                                    </p>

                                    @await Component.InvokeAsync("_ProductProp", new { priceID = Model.PriceID })
                                    <button class=" basketAdd1 btn btn-outline-info mb-4 mt-2 d-flex justify-content-center">
                                        Sepete Ekle
                                        <i class="icon-shopping_basket"></i>
                                    </button>
                                </div>
                              
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</main>


@await Component.InvokeAsync("_ProductDetailsSlider")
<!-- Related items section-->


<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<script>
  


    // $(document).ready(function () {

    //     $(".iframe").click(function () {
    //         var productId = $(this).data('product-id');

    //         $.colorbox({ iframe: true, href: "Product/ProductDetails?productID="
    //         + productId, width: "90%", height: "85%" });

    //     });
    // });

   
    $('.basketAdd1').click(function () {
        // var dimensionId = $(".dimension").data("dimension-id");
        // var colorID;

        // $('input[name="colorOfItem"]').each(function () {
        //     if ($(this).is(':checked')) {
        //         var selectedColorID = $(this).attr('id').replace('radioColor_', '');

        //         colorID = selectedColorID; // colorID ayarlayın
        //     }
        // });

        var userId = $(this).data('userId');

        var count = $(".block_quantity__number").val();
        if (count <= 0 || isNaN(count)) {
            toastr.error('Lütfen geçerli bir miktar giriniz!', { position: "toast-top-end" });
            return;
        }
        // if (!userId) {
        //     toastr.warning('Lütfen sepete eklemek için giriş yapın!', { position: "toast-top-end" });
        //     return;
        // }
       

        var dto = {       
            UserID: "1",
            Count: count,
            PriceID: productPriceID          
        };


        $.ajax({
            type: 'POST',
            url: '/Basket/BasketAdd',
            contentType: 'application/json',
            data: JSON.stringify(dto),
            success: function (response) {
                toastr.success('Sepete Eklendi!', { position: "toast-top-end" });
            },
            error: function (xhr, status, error) {
                if (xhr.status == 404) {
                    toastr.error('Beklenmeyen bir hata oluştu!', { position: "toast-top-end" });
                }
                if (xhr.status == 401) {
                    toastr.warning('İşlemi Yapmak İçin Giriş Yapmalısın!', { position: "toast-top-end" });
                }
                if (xhr.status == 400) {
                    toastr.warning('Bu Daha Önce Kaldırılmış!', { position: "toast-top-end" });
                }
            }
        });
    });




    $(document).ready(function () {
        // Seçilen boyut ve renk id'lerini saklayacak değişkenler
        var selectedDimensionId;
        var selectedColorId;
        var productPrice;

        // Boyut butonlarına click olayı ekle
        $(".dimension").click(function () {
            // Seçilen butonun data-dimension-id özelliğini al
            selectedDimensionId = $(this).data("dimension-id");

            // Seçilen boyut ve renk id'lerini kontrol et ve AJAX isteğini gönder
            sendAjaxRequest();
        });

        // Renk butonlarına click olayı ekle
        $(".color").click(function () {
            // Seçilen butonun data-color-id özelliğini al
            selectedColorId = $(this).data("color-id");

            // Seçilen boyut ve renk id'lerini kontrol et ve AJAX isteğini gönder
            sendAjaxRequest();
        });

        // AJAX isteğini gönderen fonksiyon
        function sendAjaxRequest() {
            // Her iki parametre de tanımlıysa AJAX isteğini gönder
            if (selectedDimensionId !== undefined && selectedColorId !== undefined) {
                var productID = @Html.Raw(productId);

               
                var dto = {
                    ProductID: productID,
                    ColorID: selectedColorId,
                    DimensionsID: selectedDimensionId,
                    Stock:0

                };

                       
                $.ajax({
                    type: 'POST',
                    url: '/Product/GetProductDimension',
                    contentType: 'application/json',
                    data: JSON.stringify(dto),
                    success: function (response) {
                        // Başarılı                  
                        var restData = JSON.parse(response); 
                        productPriceID = restData.priceID;
                          
                        $(".block_price__currency").text(restData.price + " ₺");
                        $(".product__stock").text(restData.stock + " Adet");
                    },
                    error: function (xhr, status, error) {
                      
                        if (xhr.status == 404) {
                            toastr.error('Beklenmeyen bir hata oluştu!', { position: "toast-top-end" });
                        }
                        if (xhr.status == 401) {
                            toastr.warning('İşlemi Yapmak İçin Giriş Yapmalısın!', { position: "toast-top-end" });
                        }
                        if (xhr.status == 400) {
                            toastr.warning('Bu Daha Önce Kaldırılmış!', { position: "toast-top-end" });
                        }
                    }
                });
            }
        }
    });




    $(document).ready(function () {
        $(".block_specification__specificationShow").click(function () {
            // Tıklanan öğenin bir sonraki kardeşi olan <p> etiketini bul
            var content = $(this).next("div");

            // Eğer içerik gösteriliyorsa, kapat; değilse, aç
            if (content.is(":visible")) {
                content.slideUp();
            } else {
                content.slideDown();
            }
        });
    });

    window.onload = function () {

        //// SLIDER
        var slider = document.getElementsByClassName("sliderBlock_items");
        var slides = document.getElementsByClassName("sliderBlock_items__itemPhoto");
        var next = document.getElementsByClassName("sliderBlock_controls__arrowForward")[0];
        var previous = document.getElementsByClassName("sliderBlock_controls__arrowBackward")[0];
        var items = document.getElementsByClassName("sliderBlock_positionControls")[0];
        var currentSlideItem = document.getElementsByClassName("sliderBlock_positionControls__paginatorItem");

        var currentSlide = 0;
        var slideInterval = setInterval(nextSlide, 5000);  /// Delay time of slides

        function nextSlide() {
            goToSlide(currentSlide + 1);
        }

        function previousSlide() {
            goToSlide(currentSlide - 1);
        }


        function goToSlide(n) {
            slides[currentSlide].className = 'sliderBlock_items__itemPhoto';
            items.children[currentSlide].className = 'sliderBlock_positionControls__paginatorItem';
            currentSlide = (n + slides.length) % slides.length;
            slides[currentSlide].className = 'sliderBlock_items__itemPhoto sliderBlock_items__showing';
            items.children[currentSlide].className = 'sliderBlock_positionControls__paginatorItem sliderBlock_positionControls__active';
        }


        next.onclick = function () {
            nextSlide();
        };
        previous.onclick = function () {
            previousSlide();
        };


        function goToSlideAfterPushTheMiniBlock() {
            for (var i = 0; i < currentSlideItem.length; i++) {
                currentSlideItem[i].onclick = function (i) {
                    var index = Array.prototype.indexOf.call(currentSlideItem, this);
                    goToSlide(index);
                }
            }
        }

        goToSlideAfterPushTheMiniBlock();


        /////////////////////////////////////////////////////////

        ///// Specification Field


        var buttonFullSpecification = document.getElementsByClassName("block_specification")[0];
        var buttonSpecification = document.getElementsByClassName("block_specification__specificationShow")[0];
        var buttonInformation = document.getElementsByClassName("block_specification__informationShow")[0];

        var blockCharacteristiic = document.querySelector(".block_descriptionCharacteristic");
        var activeCharacteristic = document.querySelector(".block_descriptionCharacteristic__active");


        buttonFullSpecification.onclick = function () {

            console.log("OK");


            buttonSpecification.classList.toggle("hide");
            buttonInformation.classList.toggle("hide");


            blockCharacteristiic.classList.toggle("block_descriptionCharacteristic__active");


        };


        /////  QUANTITY ITEMS

        var up = document.getElementsByClassName('block_quantity__up')[0],
            down = document.getElementsByClassName('block_quantity__down')[0],
            input = document.getElementsByClassName('block_quantity__number')[0];

        function getValue() {
            return parseInt(input.value);
        }

        up.onclick = function (event) {
            input.value = getValue() + 1;
        };
        down.onclick = function (event) {
            if (input.value <= 1) {
                return 1;
            } else {
                input.value = getValue() - 1;
            }

        }


    };
</script>



    @* // $(".dimension").on("click", function (e) {
    //     e.preventDefault();
    //     var dimensionID = $(this).attr("data-dimension-id");

    //     $.get("/Product/GetProductDimension/" + dimensionID)
    //         .done(function (data) {

    //             $(".block_price__currency").text(data + "₺")
    //         })
    //         .fail(function (xhr, status, error) {

    //             if (xhr.status == 404) {
    //                 toastr.error('Beklenmeyen bir hata oluştu!', { position: "toast-top-end" });
    //             }
    //             if (xhr.status == 401) {
    //                 toastr.warning('İşlemi Yapmak İçin Giriş Yapmalısın!', { position: "toast-top-end" });
    //             }
    //             if (xhr.status == 400) {
    //                 toastr.warning('Bu Anime Favori Listenden Daha Önce Kaldırılmış!', { position: "toast-top-end" });
    //             }
    //         });
    // }); *@